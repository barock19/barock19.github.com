<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Rock]]></title>
  <link href="http://barock19.github.com/atom.xml" rel="self"/>
  <link href="http://barock19.github.com/"/>
  <updated>2012-10-19T11:03:40+07:00</updated>
  <id>http://barock19.github.com/</id>
  <author>
    <name><![CDATA[Zidni Mubarock]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[session, request, params ada di Model. OK or break the MVC concept]]></title>
    <link href="http://barock19.github.com/blog/2012/10/19/session-request-params-ada-di-model-ok-or-break-the-mvc-concept/"/>
    <updated>2012-10-19T09:45:00+07:00</updated>
    <id>http://barock19.github.com/blog/2012/10/19/session-request-params-ada-di-model-ok-or-break-the-mvc-concept</id>
    <content type="html"><![CDATA[<pre><code>class ApplicationController &lt; ActionController::Base
    around_filter :_controller_for_model

    ....

    protected
    def _controller_for_model
      accessor = instance_variable_get(:@_request)
      kelasess = [ActiveRecord::Base, ActiveRecord::Base.class]

      kelasess.each do |kelas|
        kelas.send(:define_method, "controller", proc {accessor})
      end
      yield
      kelasess.each do |kelas|
        kelas.send :remove_method, "controller"
      end

    end
end
</code></pre>

<p>klo lo modif ApplicationController kaya diatas, Model lo bakal punya method controller yang bisa punya isinya session, request dan params</p>

<p>MVC, Model View Controller. adalah sebuah concept yang ngebantu developer, memisahkan antara logic, design dan Representasi data storage. konsep ini keren bgt, apalagi kalo applikasi yang dikembangkan oleh team yang masing-masing udah punya job desc-nya sendiri - sendiri. Yang designer, urusannya di View, Programmer di Controller dan Model.</p>

<p>Tapi terkadang, buat orang males kaya gue. suka nemuin case (mungkin lo juga sering nemuin). contoh :</p>

<p>ada Model User, dan Post. Keduanya saling berelasi</p>

<pre><code>#model User
class User &lt; ActiveRecord::Base 
    has_many :posts
end
#model Post
class Post &lt; ActiveRecord::Base 
    belongs_to :user
end
</code></pre>

<p>session yang merepresentasi kan user yang sudah login udah ada misal, di sebuah Controller kita dah definisikan ini</p>

<pre><code>class UserController &lt; ApplicationController
    def auth
        user = User.where({:user_name =&gt; params[:user], :password =&gt; params[:password]})
        if !user.nil?
            session[:current_user_id] = user.id
        else
            #FTW, Lupa cuyy ??
            redirect_to request.referer
        end
    end
    ....
end
</code></pre>

<p>(Anggep aja, males nulis code nya) kita sudah punya resource Posts. ketika user mau bikin post baru, masalahnya muncul. Mana yang lo pilih, Lo mendefnisikan user(yang udah login) yang belongs_to post lewat resource PostsController</p>

<pre><code>#dalam PostController
def create
  @post = post.new(params[:post])
@post.user =  User.find(session[:current_user_id])
  respond_to do |format|
    ....
  end
end
</code></pre>

<p>atau lo detect di Post (model) pake callback?</p>

<pre><code>#dalam model Post
before_save :detect_current_user
def detect_current_user
    user = User.find(controller.session[:current_user_id]) unless session[:current_user_id].nil?
end
#note, method controller ada klo ApplicationController dah di modif kaya snippet yang paling atas
</code></pre>

<p>ini contoh sederhana aja. mungkin lo juga sering nemuin case yang lebih complex lagi yang membuat model harus bisa punya method request, sesssion, params langsung didalam model itu sendiri. tanpa harus passing argument ke model itu lewat controller</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[first post]]></title>
    <link href="http://barock19.github.com/blog/2012/10/19/first-post/"/>
    <updated>2012-10-19T09:37:00+07:00</updated>
    <id>http://barock19.github.com/blog/2012/10/19/first-post</id>
    <content type="html"><![CDATA[<p>Hollaaa &#8230;</p>
]]></content>
  </entry>
  
</feed>
